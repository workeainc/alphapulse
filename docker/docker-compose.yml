# Docker Compose file for AlphaPlus development

services:
  # PostgreSQL Database with TimescaleDB
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: alphapulse_postgres
    environment:
      POSTGRES_DB: alphapulse
      POSTGRES_USER: alpha_emon
      POSTGRES_PASSWORD: Emon_@17711
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_production_database.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - alphapulse_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: alphapulse_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - alphapulse_network

  # Backend API
  backend:
    build:
      context: ../backend
      dockerfile: ../docker/Dockerfile.backend
    container_name: alphapulse_backend
    environment:
      - DATABASE_URL=postgresql://alpha_emon:Emon_@17711@postgres:5432/alphapulse
      - DEBUG=true
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - alphapulse_network
    restart: unless-stopped

  # Frontend Dashboard
  frontend:
    build:
      context: ../frontend
      dockerfile: ../docker/Dockerfile.frontend
    container_name: alphapulse_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NEXT_PUBLIC_WS_URL=ws://backend:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - alphapulse_network
    restart: unless-stopped

  # Celery services removed due to complexity

  # Nginx Reverse Proxy (Optional) - Commented out due to mount issues
  # nginx:
  #   image: nginx:alpine
  #   container_name: alphapulse_nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/ssl:/etc/nginx/ssl
  #   depends_on:
  #     - backend
  #     - frontend
  #   networks:
  #     - alphapulse_network
  #   restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  alphapulse_network:
    driver: bridge
