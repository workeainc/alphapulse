{
  "test_run": {
    "start_time": "2025-08-15T10:43:00.213141+00:00",
    "end_time": "2025-08-15T10:43:11.090004+00:00",
    "total_duration_seconds": 10.876863,
    "total_tests": 6,
    "passed_tests": 4,
    "failed_tests": 2,
    "success_rate": 66.66666666666666
  },
  "test_results": {
    "database_scan": {
      "status": "completed",
      "report": {
        "status": "completed",
        "summary": {
          "total_tables": 4,
          "missing_tables": 0,
          "mismatched_tables": 0,
          "tables_found": [
            "signals",
            "logs",
            "feedback",
            "performance_metrics"
          ]
        },
        "details": {
          "signals": {
            "status": "found",
            "columns": 15
          },
          "logs": {
            "status": "found",
            "columns": 8
          },
          "feedback": {
            "status": "found",
            "columns": 6
          },
          "performance_metrics": {
            "status": "found",
            "columns": 7
          }
        }
      },
      "timestamp": "2025-08-15T10:43:00.213865+00:00"
    },
    "unit_tests": {
      "status": "passed",
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.13.5, pytest-8.4.1, pluggy-1.6.0 -- C:\\Python313\\python.exe\ncachedir: .pytest_cache\nbenchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\nrootdir: E:\\Emon Work\\AlphaPlus\\backend\nplugins: anyio-4.10.0, asyncio-1.1.0, benchmark-5.1.0, cov-6.2.1\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 4 items\n\ntest_simple_working.py::TestSimpleWorking::test_technical_indicators_initialization PASSED [ 25%]\ntest_simple_working.py::TestSimpleWorking::test_rsi_calculation_basic PASSED [ 50%]\ntest_simple_working.py::TestSimpleWorking::test_macd_calculation_basic PASSED [ 75%]\ntest_simple_working.py::TestSimpleWorking::test_bollinger_bands_basic PASSED [100%]\n\n============================== warnings summary ===============================\nC:\\Users\\Emon PC\\AppData\\Roaming\\Python\\Python313\\site-packages\\dateutil\\tz\\tz.py:37\n  C:\\Users\\Emon PC\\AppData\\Roaming\\Python\\Python313\\site-packages\\dateutil\\tz\\tz.py:37: DeprecationWarning: datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).\n    EPOCH = datetime.datetime.utcfromtimestamp(0)\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n======================== 4 passed, 1 warning in 0.38s =========================\n",
      "timestamp": "2025-08-15T10:43:01.626114+00:00"
    },
    "integration_tests": {
      "status": "failed",
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.13.5, pytest-8.4.1, pluggy-1.6.0 -- C:\\Python313\\python.exe\ncachedir: .pytest_cache\nbenchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\nrootdir: E:\\Emon Work\\AlphaPlus\\backend\nplugins: anyio-4.10.0, asyncio-1.1.0, benchmark-5.1.0, cov-6.2.1\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 3 items\n\ntest_integration_simple.py::TestIntegrationSimple::test_full_pipeline_basic FAILED [ 33%]\ntest_integration_simple.py::TestIntegrationSimple::test_latency_measurement PASSED [ 66%]\ntest_integration_simple.py::TestIntegrationSimple::test_throughput_measurement PASSED [100%]\n\n================================== FAILURES ===================================\n_______________ TestIntegrationSimple.test_full_pipeline_basic ________________\ntest_integration_simple.py:42: in test_full_pipeline_basic\n    signal = self.signal_generator.generate_signal(\nE   TypeError: MLSignalGenerator.generate_signal() got an unexpected keyword argument 'current_price'\n============================== warnings summary ===============================\nC:\\Users\\Emon PC\\AppData\\Roaming\\Python\\Python313\\site-packages\\dateutil\\tz\\tz.py:37\n  C:\\Users\\Emon PC\\AppData\\Roaming\\Python\\Python313\\site-packages\\dateutil\\tz\\tz.py:37: DeprecationWarning: datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).\n    EPOCH = datetime.datetime.utcfromtimestamp(0)\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nFAILED test_integration_simple.py::TestIntegrationSimple::test_full_pipeline_basic\n=================== 1 failed, 2 passed, 1 warning in 0.49s ====================\n",
      "error": "",
      "timestamp": "2025-08-15T10:43:03.160722+00:00"
    },
    "database_tests": {
      "status": "passed",
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.13.5, pytest-8.4.1, pluggy-1.6.0 -- C:\\Python313\\python.exe\ncachedir: .pytest_cache\nbenchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\nrootdir: E:\\Emon Work\\AlphaPlus\\backend\nplugins: anyio-4.10.0, asyncio-1.1.0, benchmark-5.1.0, cov-6.2.1\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 3 items\n\ntest_database_simple.py::TestDatabaseSimple::test_database_connection PASSED [ 33%]\ntest_database_simple.py::TestDatabaseSimple::test_table_creation PASSED  [ 66%]\ntest_database_simple.py::TestDatabaseSimple::test_signal_insertion PASSED [100%]\n\n============================== warnings summary ===============================\ntest_database_simple.py::TestDatabaseSimple::test_signal_insertion\n  E:\\Emon Work\\AlphaPlus\\backend\\test_database_simple.py:74: DeprecationWarning: The default datetime adapter is deprecated as of Python 3.12; see the sqlite3 documentation for suggested replacement recipes\n    self.cursor.execute(\"\"\"\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n======================== 3 passed, 1 warning in 2.67s =========================\n",
      "timestamp": "2025-08-15T10:43:06.755112+00:00"
    },
    "performance_tests": {
      "status": "passed",
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.13.5, pytest-8.4.1, pluggy-1.6.0 -- C:\\Python313\\python.exe\ncachedir: .pytest_cache\nbenchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\nrootdir: E:\\Emon Work\\AlphaPlus\\backend\nplugins: anyio-4.10.0, asyncio-1.1.0, benchmark-5.1.0, cov-6.2.1\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 3 items\n\ntest_performance_simple.py::TestPerformanceSimple::test_rsi_performance PASSED [ 33%]\ntest_performance_simple.py::TestPerformanceSimple::test_memory_usage PASSED [ 66%]\ntest_performance_simple.py::TestPerformanceSimple::test_cpu_usage PASSED [100%]\n\n============================== warnings summary ===============================\nC:\\Users\\Emon PC\\AppData\\Roaming\\Python\\Python313\\site-packages\\dateutil\\tz\\tz.py:37\n  C:\\Users\\Emon PC\\AppData\\Roaming\\Python\\Python313\\site-packages\\dateutil\\tz\\tz.py:37: DeprecationWarning: datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).\n    EPOCH = datetime.datetime.utcfromtimestamp(0)\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n======================== 3 passed, 1 warning in 0.40s =========================\n",
      "timestamp": "2025-08-15T10:43:08.208995+00:00"
    },
    "edge_case_tests": {
      "status": "passed",
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.13.5, pytest-8.4.1, pluggy-1.6.0 -- C:\\Python313\\python.exe\ncachedir: .pytest_cache\nbenchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\nrootdir: E:\\Emon Work\\AlphaPlus\\backend\nplugins: anyio-4.10.0, asyncio-1.1.0, benchmark-5.1.0, cov-6.2.1\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 7 items\n\ntest_edge_cases_simple.py::TestEdgeCasesSimple::test_empty_price_list PASSED [ 14%]\ntest_edge_cases_simple.py::TestEdgeCasesSimple::test_single_price PASSED [ 28%]\ntest_edge_cases_simple.py::TestEdgeCasesSimple::test_constant_prices PASSED [ 42%]\ntest_edge_cases_simple.py::TestEdgeCasesSimple::test_extreme_prices PASSED [ 57%]\ntest_edge_cases_simple.py::TestEdgeCasesSimple::test_negative_prices PASSED [ 71%]\ntest_edge_cases_simple.py::TestEdgeCasesSimple::test_large_price_list PASSED [ 85%]\ntest_edge_cases_simple.py::TestEdgeCasesSimple::test_nan_values PASSED   [100%]\n\n============================== warnings summary ===============================\nC:\\Users\\Emon PC\\AppData\\Roaming\\Python\\Python313\\site-packages\\dateutil\\tz\\tz.py:37\n  C:\\Users\\Emon PC\\AppData\\Roaming\\Python\\Python313\\site-packages\\dateutil\\tz\\tz.py:37: DeprecationWarning: datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).\n    EPOCH = datetime.datetime.utcfromtimestamp(0)\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n======================== 7 passed, 1 warning in 0.76s =========================\n",
      "timestamp": "2025-08-15T10:43:10.010368+00:00"
    }
  },
  "performance_metrics": {
    "target_latency_ms": 50,
    "target_throughput_signals_per_sec": 10000,
    "target_accuracy_percent": 75,
    "target_filter_rate_percent": 60
  },
  "recommendations": [
    "Fix failed tests: integration_tests",
    "Monitor system performance in production",
    "Implement continuous integration for automated testing",
    "Set up monitoring and alerting for system health"
  ]
}